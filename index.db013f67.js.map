{"mappings":"ACEA,IAAM,EAAe,SAAS,aAAa,CAAC,SAEvC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAa,IAAI,CAAA,OAAA,QAAA,CAAA,GAA9B,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAgC,CACnC,IAAM,EAAQ,AADX,EAAA,KAAA,CACe,KAAK,CAEvB,CAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GACpC,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tableElement = document.querySelector(\"table\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = tableElement.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var raw = _step.value;\n        var cells = raw.cells;\n        cells[3].after(cells[1].cloneNode(true));\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.db013f67.js.map\n","'use strict';\n\nconst tableElement = document.querySelector('table');\n\nfor (const raw of tableElement.rows) {\n  const cells = raw.cells;\n\n  cells[3].after(cells[1].cloneNode(true));\n}\n"],"names":["tableElement","document","querySelector","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","rows","Symbol","iterator","next","done","cells","raw","value","after","cloneNode","err","return"],"version":3,"file":"index.db013f67.js.map"}